package ru.stimmax.lessons.lesson03.homework


//"Hackathon Survival"


// 1. Название мероприятия (неизменяемая публичная переменная известная на момент написания)
val name: String = "Monster Hackaton"

// 2. Дата проведения (публичная переменная известная на момент написания, но может быть изменена из-за переноса)
var date: String = "10 ноября 2025"

// 3. Место проведения (публичная переменная известная на момент написания, но может быть изменена из-за переноса)
var location: String = "Букингемский дворец"

// 4. Подробный бюджет мероприятия, включая расходы на оборудование, кейтеринг и другие операционные расходы. (приватная неизменяемая переменная - её не должны увидеть и бюджет уже запланирован и утверждён и не должен изменяться)
private val budget: String = "подробная информация с перечислением поставщиков и сумм для внутреннего пользования"

// 5. Количество участников (публичная переменная известная на момент написания, может быть изменена из-за количества фактически пришедших)
var participantsCounts: Int = 0


// 6. Длительность хакатона (публичная переменная известная на момент написания, но может быть изменена из-за обстоятельств)
val duration: Int = 3

// 7. Контактная информация и условия соглашений с поставщиками пищи, оборудования и других услуг. (приватная неизменяемая переменная - её не должны увидеть и условия соглашения уже зафиксированы как и контакты фикс)
private val agreement: String = "подробная информация с перечислением поставщиков и сумм для внутреннего пользования"

// 8. Текущее состояние хакатона (статус) (публичная переменная известная на момент написания, но может быть изменена из-за переноса)
// логично было бы использовать boolean - как прописано в материалах дз - для логических значений - да или нет - но я еще не разобралась как делать
var status: String = "Статус: мероприятие проводится"

// 9. Список спонсоров (неизменяемая публичная переменная известная на момент написания)
val sponsors: String = "Список спонсоров"

// 10. Бюджет мероприятия (неизменяемая приватная переменная известная на момент написания)
private val budgett: Int = 1000000

// 11. Текущий уровень доступа к интернету (публичная переменная известная на момент написания, но может быть изменена из-за обстоятельств)
// логично было бы использовать boolean - как прописано в материалах дз - для логических значений - да или нет
// true = есть интернет, false = нет интернета

// var internetAccessibility: Boolean = true

// fun main() {
   // if (internetAccessibility) {
    //    println("Интернет доступен")
 //   } else {
 //       println("Интернет недоступен")
 //   }
// }

// 12. Информация о транспортировке оборудования, распределении ресурсов и координации между различными командами поддержки.
// (приватная переменная на данный момент известна - ресурсы распределили, договор о транспортировке прописали и координация выстроена, но может измениться)
private var InfoTransportandCoordination: String = "Информация о транспортировке, ресурсах, координации"

// 13. Количество команд (неизменяемая публичная переменная известная на момент написания)
var numberofteams: Int = 0

// 14. Перечень задач (публичная переменная известная на момент написания, но может быть изменена из-за обстоятельств)
var tasks: String = "Перечень задач"

// 15. План эвакуации (изменяемая публичная переменная известная на момент написания но может поменятся)
var evacuation: String = "План эвакуации"

// 16. Список доступного оборудования (всё, что выделено для использования на мероприятии) (неизменяемая публичная переменная известная на момент написания)
val totalequipment: String = "Список доступного оборудования"

// 17. Список свободного оборудования (всё, что можно взять прямо сейчас и что не занято другими участниками) (публичная изменяемая переменная с отложенной инициализацией, так как на момент создания поставщик и график не известны)
lateinit var availableequipment: String

// 18. График питания участников (зависит от поставщика питания, определяемого за неделю до начала) (публичная изменяемая переменная с отложенной инициализацией, так как на момент создания поставщик и график не известны)
lateinit var mealSchedule: String

// 19. План мероприятий на случай сбоев (неизменяемая публичная переменная известная на момент написания)
val extraplan: String = "План мероприятий на случай сбоев"

// 20. Список экспертов и жюри (неизменяемая публичная переменная известная на момент написания)
val experts: String = "Список экспертов и жюри"

// 21. Политика конфиденциальности (неизменяемая публичная переменная известная на момент написания)
val PrivacyPolicy: String = "Политика конфиденциальности"

// 22. Приватные отзывы (фидбэк) участников и зрителей для анализа проблем. (неизменяемая приватная переменная неизвестная на момент написания)
private lateinit var reviews: String

// 23. Текущая температура в помещении (публичная изменяемая переменная с отложенной инициализацией, так как на момент создания неизвестна температура)
lateinit var temperature: String


// 24. Данные мониторинга и анализ производительности сетевого оборудования и интернет-соединения для целей отладки своих приложений командами
// (приватная изменяемая переменная с отложенной инициализацией, так как на момент создания неизвестны данные и анализ)
lateinit var monitoring: String


//25. Регулятор скорости интернета (понижающий коэффициент, например 0.5)
//ЭТО МНЕ НЕПОНЯТНО!

//26. Уровень освещения (неизменяемая публичная переменная известная на момент написания)
val lights: String = "Уровень освещения"


//27. Лог событий мероприятия
//(публичная изменяемая переменная с отложенной инициализацией, так как на момент написания неизвестно)
lateinit var informationTeam: String

//28. Возможность получения медицинской помощи прямо на мероприятии (да/нет)
//(изменяемая публичная переменная неизвестная на момент написания)
//var medicalHelpAvailable: Boolean = true
//fun main() {
 //   if (medicalHelpAvailable) {
 //       println("Медицинская помощь доступна на мероприятии")
  //  } else {
  //      println("Медицинская помощь недоступна на мероприятии")
  //  }
// }

//29. Планы и процедуры для обеспечения безопасности мероприятия, включая планы эвакуации и протоколы чрезвычайных ситуаций.(неизменяемая публичная переменная известная на момент написания)
val evacuationplan: String = "Планы и процедуры для обеспечения безопасности мероприятия, включая планы эвакуации и протоколы чрезвычайных ситуаций"

//30. Регистрационный номер мероприятия (публичная изменяемая переменная с отложенной инициализацией, так как на момент написания регистрационный номер неизвестен)
// lateinit val registrationNumber: String

//31. Максимально допустимый уровень шума в помещении хакатона.(неизменяемая публичная переменная известная на момент написания)
val volumelimit: String = "30 Децибел"


//32. Индикатор превышения уровня шума в помещениях (превышен или не превышен в данный момент)
    //var noiseLevelExceeded: Boolean = false  // false = не превышен, true = превышен

//fun main() {
   // if (noiseLevelExceeded) {
  //      println("Внимание! Уровень шума превышен")
 //   } else {
   //     println("Уровень шума в норме")
 //   }

    // Пример изменения состояния
    //noiseLevelExceeded = true
   // println("Состояние изменилось: $noiseLevelExceeded")
//}


//32. Индикатор превышения уровня шума в помещениях (превышен или не превышен в данный момент)
var noiseLevelExceeded: Boolean = true


//33. План взаимодействия с прессой (изменяемая приватная переменная известная на момент написания)
//private val rulesforprizes: String = "Внутренние правила распределения призов"


//34. Детальная публичная информация о проектах каждой команды, сбор данных включает в себя компиляцию кода и сбор статистики прогона автоматизированных проверок.
//(публичная изменяемая переменная с отложенной инициализацией, так как на момент написания неизвестно)
lateinit var informationteam: String

//35. Статус получения всех необходимых разрешений для проведения мероприятия
//(публичная изменяемая переменная с отложенной инициализацией, так как на момент написания неизвестно)
lateinit var acceptforevent: String

//36. Индикатор доступности специализированного оборудования в данный момент (например, специальному оборудованию)
//
val Specializedequipmentavailabilityindicator : String by lazy {
    "Индикатор доступности специализированного оборудования в данный момент"
}
//fun main() {
//    println(specializedEquipmentIndicator)
//}

// 36. Индикатор доступности специализированного оборудования (булевое значение)
var specializedEquipmentAvailable: Boolean = true  // true = доступно, false = недоступно

fun main() {
    if (specializedEquipmentAvailable) {
        println("Специализированное оборудование доступно")
    } else {
        println("Специализированное оборудование недоступно")
    }
}


//37. Список партнеров мероприятия (неизменяемая публичная переменная известная на момент написания)
val partners: String = "Список партнеров мероприятия"
    //private set


//38. Отчет, включающий фотографии, видео и отзывы, генерируется и становится доступен после завершения мероприятия.
//(публичная изменяемая переменная с отложенной инициализацией, так как на момент написания имя неизвестно)
//val report: String bu lazy {
  //  ""
//}

// 39. Внутренние правила распределения призов (неизменяемая приватная переменная известная на момент написания)
private val rulesforprizes: String = "Внутренние правила распределения призов"


// 40. Список разыгрываемых призов (неизменяемая публичная переменная известная на момент написания)
val prizes: String = "Список разыгрываемых призов"


//41. Контактная информация экстренных служб, медицинского персонала и других важных служб, для внутреннего пользования.(неизменяемая приватная переменная известная на момент написания)
private val emergencynumbers: String = "Контактная информация экстренных служб, медицинского персонала и других важных служб, для внутреннего пользования"


//42. Особые условия для участников с ограниченными возможностями (неизменяемая публичная переменная известная на момент написания)
val specialconditions: String = "Список условий"


//43. Общее настроение участников (определяется опросами) (публичная изменяемая переменная)
 var mood: String = "Настроение"


//44. Подробный план хакатона, включающий время и содержание каждого сегмента, инициализируется непосредственно перед началом мероприятия, так как зависит от фактического состава команд и взятых в работу задач.
//(публичная изменяемая переменная с отложенной инициализацией, так как на момент написания имя неизвестно)
lateinit var planofevent: String


//45. Имя знаменитого специального гостя, которое будет объявлено за день до мероприятия, но в момент инициализации неизвестно.
// (публичная изменяемая переменная с отложенной инициализацией, так как на момент написания имя неизвестно)
lateinit var specialguest: String


// 46. Максимальное количество людей, которое может вместить место проведения.(неизменяемая публичная переменная известная на момент написания)
val limitOfGuests: Int = 500


// 47. Количество часов, отведенное каждой команде для работы над проектом.(неизменяемая публичная переменная известная на момент написания)
val workhoursforproject: Int = 3
