package ru.stimmax.lessons.lesson04

// Урок 4. 12.09.2025
// Базовые типы данных


// В этом задании вам предстоит определить, какой тип данных (Int, Long, Float, Double, Boolean, Char, String) лучше всего подходит для каждого из предложенных значений. Некоторые значения могут соответствовать более чем одному типу, но ваша задача - выбрать наиболее подходящий тип.

val s1: Byte = 100
val s2: Long = 156L
val s3: Float = 12.34f
val s4: Double = 123.456
val s5: String = "Hello, World!"
val s6: Boolean = true
val s7: Char = 'a'
val s8: Int = 0
val s9: Long = 9999999999L
val s10: Float = 25.0f
val s11: Double = -123.4
val s12: List<Int> = listOf(2, 3, 4)
val s13: Char = '?'
val s14: String = "Kotlin"
val s15: Set<Double> = setOf(3.14, 45.0)
val s16: Boolean = false
val s17: String = "D"
val s18: Long = 2147483648L
//val s19: Array<Int> = arrayOf("Hello", "world")
val s20: String = "true"
val s21: Map<Int, String> = mapOf(12 to "Kotlin")
val s22: Float = 0.1f
val s23: Char = '!'
val s24: Map<String, Any?> = mapOf("a" to 'a', "b" to true)



// 1. Подобрать подходящий тип, который будет хранить количество раз, сколько сосед включал перфоратор в вс утром на протяжении года?
val store: Int = 50

// 2. Уровень чечевичного супа С ФРИКАДЕЛЬКАМИ В КАСТРЮЛЕ в долях см
val soup: Float = 120.1f

// 3. Буква года, которую выбрали на ежегодной конференции выбора букв ;)
val leter: Char = 'H'

// 4. Хранить энергию столкновения мухи со лбом академика при вылете из адронного коллайдера.
val speed: Double = 1532546.6542

// 5. Хранить число прыжков лягушки через лужи во время одной прогулки.
val jumps: Short = 123

// 6. Хранить словарь «имя разработчика → причина, почему задача до сих пор не сделана».
val reason: Map <String, String> = mapOf ("" to "")

// 7. Хранить признак, включен ли временный костыль трёхлетней давности на продакшене.
val sale: Boolean = false

// 8. Хранить количество тапков, которые кот утащил за диван сегодня, при том что тапки есть только у меня и жены.
val shoes: Byte = 4

// 9. Хранить переменную, которая хранит общее количество крошек на диване после вечеринки студентов.
val party: Long = 138011039L

// 10. Хранить список зачислений на карту, чтобы всегда можно было посмотреть и поплакать.
val money: Array<Double> = arrayOf(21.1, 32.1)

// 11. Хранить список отговорок «почему тесты упали», чтобы не придумывать заново.
val reasons: List<String> = listOf("потому что", "")

// 12. Хранить строку «будет сделано завтра» для автоматических ответов.
val lead: String = "будет сделано завтра"

