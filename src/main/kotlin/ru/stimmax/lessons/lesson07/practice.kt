package ru.stimmax.lessons.lesson07

//     ЦИКЛЫ

fun main() {


// Циклы - это фундаментальная концепция в программировании, позволяющая повторять
// набор инструкций до тех пор, пока определенное условие остается истинным


    // Цикл for
    // Цикл for в Kotlin используется для итерации по диапазону значений или по коллекции

    for (i in 1..10) {
        println("i = " + i * 2)
    }


    // Задание диапазонов

    //Для задания диапазона в цикле for можно использовать различные методы:

    // Прямое Задание Диапазона:

    for (i in 1..10) {
        println(i)
    }

    // Обратный Диапазон:

    for (i in 10 downTo 1) {
        println(i)
    }

    // С Шагом (step):

    for (i in 1..10 step 2) {
        println(i)
    }

    // Использование До (until):

    for (i in 1 until 10) { // не включая 10
        println(i)
    }


//    Использование заданных диапазонов

//    Вы также можете определить диапазон в переменной и использовать его в цикле:
    val range = 1..10
    for (i in range) {
        println(i)
    }

//    Цикл while
//    Цикл while выполняется, пока условие истинно. Синтаксис:
//    var counter: Int = 0
//    var sum = 0
//    while (counter++ < 10) {
//        println(counter)
//    }
//    Цикл while - сначала думает, потом делает.


//    Цикл do while
//
//    Цикл do while так же выполняется, пока условие истинно, но выполняет проверку
//    после итерации, и таким образом гарантирует, что тело цикла выполнится хотя бы
//    один раз:

//    do {
//        println(counter)
//    } while (counter++ < 10)
//    Цикл do while - сначала делает, потом думает.


//    Прерывание и Пропуск Итерации
//
//   В Kotlin, также как и в других языках программирования, вы можете использовать
//   операторы break и continue для управления выполнением циклов:
//
//    break: Прерывает цикл.
//
    for (i in 1..10) {
        if (i == 3) break
        println(i)
    }

//    continue: Пропускает текущую итерацию и переходит к следующей.

    for (i in 1..10) {
        if (i == 3) continue
        println(i)
    }


//Задачи для цикла for



//Прямой Диапазон

//Напишите функцию, которая печатает числа от 1 до 10.

    for (i in 1..10) {
        println(i)
    }
//Напишите функцию, которая выводит на экран квадраты чисел от 1 до 5.

    for (i in 1..5) {
        println(i * i)
    }


//Обратный Диапазон

//Создайте функцию, которая выводит все числа от 10 до 1 в обратном порядке.
    for (i in 10 downTo 1) {
        println(i * i)
    }

//Напишите программу, которая отображает убывающую последовательность четных чисел
// от 20 до 2.

    for (i in 20 downTo 2) {
       if (i% 2 ==0 ) {
           println(i * i)
       }
    }

//Цикл с Шагом

//Реализуйте функцию, выводящую каждое третье число в диапазоне от 1 до 30.


//Напишите цикл, который печатает числа от 100 до 50 с шагом 5.

    for (i in 100 downTo 50 step 5) {
        println(i * i)
    }

//Использование until

//Создайте целочисленную переменную длины списка 'length'. Создайте цикл,
// который выводит индексы элементов списка. Индексы начинаются с нуля.
    // слово из пяти букв?

    val length: Int = 34
    for (i in 0 until length) {
        println (i)
    }

//Задачи для цикла while

//Цикл While

//Напишите функцию, которая суммирует числа от 1 до 10, используя цикл while.
//    var counter: Int = 0
//    var sum: Int = 0
//    while (counter <10) {
//        sum+=counter
//        counter++
//    }
//    println(sum)

//Создайте цикл, который считает количество цифр в числе, начиная с 100 и уменьшая
// его на 1 после каждой итерации.

//Цикл do while


//Напишите программу, которая начинает суммирование чисел, начиная с 1, и продолжает
// добавлять следующее число (2, 3, 4, ...), пока сумма не превысит 50
//    var counter: Int = 0
//    var sum: Int = 0
//    do {
//        counter++
//        sum+=counter
//        println(sum)
//    } while ((sum + counter) <=50)


//Найти наибольшее целое число, факториал которого меньше или равен 1000.

//Задачи с прерыванием и пропуском итерации
//Использование break

//Напишите цикл, перебирающий числа от 1 и прерывающийся, как только встречается число,
// кратное 7.
//Создайте цикл, который выводит числа от , но прерывается при достижении числа 25.

//Использование continue

//Реализуйте цикл, который печатает все числа от 1 до 10, кроме чисел 3 и 7.
//Напишите цикл, перебирающий числа от 20 до 1, но пропускающий каждое четвертое число.

    // Цикл while который длится бесконечно
//    var counter: Int = 1
//    while (true) {
//    println(counter)
//        if (counter++ % 7 == 0) break
//    }


    for (i in 1..10) {
        if (i != 3 && i != 7) {
            println (i)
        }
    }

    for (i in 1..10) {
        if (i==3 || i ==7) continue
        println (i)
    }



    // пропускаем каждое четвертое число
    var counter: Int = 0
    for ( i in 20 downTo 1) {
        counter++
        if (counter == 4) {
            counter = 0
            continue
        }
            println (i)
    }

}