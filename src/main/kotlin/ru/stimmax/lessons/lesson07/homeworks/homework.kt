package ru.stimmax.lessons.lesson07.homeworks

fun main() {

//Задания для цикла for
//Прямой диапазон

//1. Напишите цикл for, который выводит числа от 1 до 5.
    println("Задание 1")
    for (i in 1..5) {
        println(i)
    }

//2. Напишите цикл for, который выводит четные числа от 1 до 10.
    println("Задание 2")
    for (i in 1..10) {
        if (i % 2 == 0) {
            println(i)
        }
    }

//Обратный диапазон

//3. Создайте цикл for, который выводит числа от 5 до 1.
    println("Задание 3")
    for (i in 5 downTo 1) {
        println(i)
    }

//4. Создайте цикл for, который выводит числа от 10 до 1, уменьшая их на 2.
    println("Задание 4")
    for (i in 10 downTo 2) {
        println(i - 2)
    }

//С шагом (step)

//5. Используйте цикл for с шагом 2 для вывода чисел от 1 до 9.
    println("Задание 5")
    for (i in 1..9 step 2) {
        println(i)
    }

//6. Напишите цикл for, который выводит каждое третье число в диапазоне от 1 до 20.
    println("Задание 6")
    for (i in 1..20 step 3) {
        println(i)
    }

//Использование до (until)

//7. Создайте числовую переменную 'size'. Используйте цикл for с шагом 2 для вывода
// чисел от 3 до size не включая size.
    println("Задание 7")
    val size = 25
    for (i in 3 until size step 2) {
        println(i)
    }


//Задания для цикла while
//Цикл while

//8. Создайте цикл while, который выводит квадраты чисел от 1 до 5.
    println("Задание 8")
    var i8 = 0
    while (i8++ <= 5) {
        println(i8 * i8)
    }

//    var i8 = 1
//    while (i8 <= 5) {
//        println(i8 * i8++)
//    }

//9. Напишите цикл while, который уменьшает число от 10 до 5.
// После этого вывести результат в консоль
    println("Задание 9")
    var counter09 = 10
    while (counter09 > 5) {
        --counter09
        println(counter09)
    }
//Цикл do while

//10. Используйте цикл do while, чтобы вывести числа от 5 до 1.
    println("Задание 10")
    var per10: Int = 5
    do {
        println(per10--)
    } while (per10 >= 1)

//11. Создайте цикл do while, который повторяется, пока счетчик меньше 10, начиная с 5.
    println("Задание 11")
    var per11: Int = 5
    do {
        println(per11)
    } while (per11++ < 10)

//Задания для прерывания и пропуска итерации
//Использование break

//12.Напишите цикл for от 1 до 10 и используйте break, чтобы выйти из цикла при достижении 6.
    println("Задание 12")
    for (i in 1..10) {
        if (i == 6) break
        println(i)
    }

//13. Создайте цикл while, который бесконечно выводит числа, начиная с 1, но прерывается при достижении 10.
    println("Задание 13")
    var per13 = 1
    while (true) {
        println(per13)
        if (per13++ == 10) break
    }


//Использование continue

//14. В цикле for от 1 до 10 используйте continue, чтобы пропустить четные числа.
    println("Задание 14")
    for (per14 in 1..10) {
        if (per14 % 2 == 0) {
            continue
            println(per14)
        }
    }
//15. Напишите цикл while, который выводит числа от 1 до 10, но пропускает числа, кратные 3.
    println("Задание 15")

    var per15 = 1
    while (per15 <= 10) {
        if (per15 % 3 == 0) {
            per15++
            continue
        }
        println(per15)
        per15++
    }

}

//Задача повышенной сложности (разбирается отдельно от основной домашки и награждается отдельным


// стимом за разбор). Её выполнять по желанию, проверка не выполняется.

//Используя вложенный цикл реализовать таблицу умножения, как на картинке.

//Напишите функцию, которая суммирует числа от 1 до 'arg' с помощью цикла for. 'arg' - целочисленный
// аргумент функции.

//Напишите функцию, которая вычисляет факториал числа 'arg' с использованием цикла while.

//Напишите функцию, которая находит сумму всех четных чисел от 2 до 'arg', используя цикл while.

//Напишите функцию, которая используя вложенные циклы while, выведет заполненный прямоугольник размером
// 5x3 из символов *.

//Напишите функцию, которая используя цикл for найдёт суммы чётных и нечётных значений
// чисел от 1 до arg.

