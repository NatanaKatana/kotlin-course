package ru.stimmax.lessons.lesson06



fun main () {

// Условные операторы - if / else / if else (if - else if - else)

    val number = 10
    if (number > 5) {
        println("Число больше 5")
    }

    if (number % 2 == 0) {
        println("Число четное")  // код для выполнения, если условие истинно
    } else {
        println("Число нечетное") // код для выполнения, если условие ложно
    }

    if (number < 0) {
        println("Число отрицательное") // код, если условие1 истинно
    } else if (number == 0) {
        println("Число равно нулю") // код, если условие2 истинно
    } else {
        println("Число положительное") // код, если оба условия ложны
    }


    // Типы данных для обозначения диапазона
    val intRange = 1..10
    val intRangeUntil = 1 until 10 // не включая последний элемент -> 10
    val downTo = 10 downTo 1
    val charRange = 'd'..'r' // любые символы в последовательности, кот. можно увеличить на единицу


    // Оператор проверки вхождения в диапазон.

    // Используя in или !in можно проверить входит ли проверяемое значение в диапазон или не входит.
    val inRange = 2 in intRange
    val notInRange = 2 !in intRange


    //  Диапазоны и проверка на вхождение в диапазон часто используются в условных операторах для принятия решений о том, по какой ветке кода пойти.

    //  Оператор when - выполняется только одна ветка (даже если значение есть в нескольких ветках)

   //   Оператор when в Kotlin - это более продвинутая и гибкая версия операторов switch-case из других языков программирования.

    val score = 95

    when (score) { // пишем в скобочках если работаем над одним объектом(аргументом)
        in 90..100 -> println("Отлично")
        in 80..89 -> println("Хорошо")
        in 70..79 -> println("Удовлетворительно")
        2 -> println ("2")
        2, 3, 5 -> println ("2") // позволяет перечислить значения с которыми нужно сравнить
        in listOf (2, 3) -> println ("2") // массив?
        else -> println("Нужно подучить")
    }

    when  { // пишем на каждой строчке если работаем и пишем разные условия над разными объектами
        score in 90..100 -> println("Отлично")
        score  in 80..89 -> println("Хорошо")
        score in 70..79 -> println("Удовлетворительно")
        else -> println("Нужно подучить")
    }



    // Использование условного оператора if как выражение (то что нужно вычислить)
        // в переменную можно записать результат выполнения кода
    // В Kotlin if может быть использован как выражение, возвращающее значение.
//    val a = 5
//    val b = 6
//    val max = if (a > b) a else b {
//        println()
//    }

    val a = 5
    val b = 6
    val max = if (a > b) {
        println()
        a
    } else {
      b
    }


   // Использование when как выражение

   // В Kotlin when может быть использован как выражение, возвращающее значение.
   // Пример:

    val result = when (score) {
        in 90..100 -> "Отлично"
        in 80..89 -> "Хорошо"
        in 70..79 -> "Удовлетворительно"
        else -> "Нужно подучить"
    }
    println(result)


    example1(19)
    example2(25,true )
}


//Задание 1

//  Напишите функцию, которая принимает текущий час (число от 0 до 23) и печатает
// строку с названием времени суток (утро, день, вечер, ночь).

fun example1(arg: Int) {
    // решение через IF
    if (arg in 0..4) {
        println("Ночь")
    } else if (arg in 5..12) {
        println("Утро")
    } else if (arg in 13..17) {
        println("День")
    } else if (arg in 18..23) {
        println("Вечер")
    } else {
        println("Некорректно задано время")
    }

    // решение через WHEN
    when (arg) {
        in 0..4 -> println("Ночь")
        in 5..12 -> println("Утро")
        in 13..17 -> println("День")
        in 18..23 -> println("Вечер")
        else -> println("Некорректно задано время")
    }
}


//Задание 4

//Создайте функцию, которая на основе текущей температуры воздуха
// (в градусах Цельсия) и наличия осадков (булево значение,
// где true - идёт дождь или снег) рекомендует, какой вид транспорта
// лучше использовать: "Автомобиль", "Велосипед", "Общественный транспорт"
// или "Прогулка". Автомобиль следует выбирать в самый холод и самую жару.
// Велосипед и прогулку не стоит выбирать во время осадков.


fun example2 (arg1: Int, arg2: Boolean) {
    if (arg1>30 || arg1 <-5) {
        if (arg2) {
            println ("Сиди дома")
        } else {
            println("Автомобиль")
        }
    } else if (arg1 >=15 && !arg2) {
        println("Прогулка")
    } else if (arg1 >=15 && arg2) {
        println("Общественный транспорт")
    } else {
        println("Велосипед")
    }

}


//Для решения заданий используй эту заготовку метода, результат работы нужно
// распечатать
// внутри метода используя функцию println("твой результат").

//Функция для строковых аргументов

// fun example1(arg: String) {
    // твой код и вывод результата через println()
//}

//Функция для целочисленных аргументов

// fun example1(arg: Int) {
    // твой код и вывод результата через println()
//}



//Задание 2

//Напишите функцию, которая принимает число (балл от 0 до 100) и печатает
// соответствующую оценку (A, B, C, D, E, F) в соответствии с школьной
// системой оценивания.



//Задание 3

//У вас есть список фруктов. Напишите функцию, которая принимает название фрукта и печатает категорию: "Цитрусовые", "Ягоды", "Экзотические", "Другие".




//Задание 5

//Магазин предлагает скидки на товары в зависимости от их стоимости. Напишите функцию, которая принимает цену товара и применяет скидку 10%, если цена выше 1000, и 5% - если цена от 500 до 1000. Результатом должна быть итоговая цена товара, распечатанная в консоль.