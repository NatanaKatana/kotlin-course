package ru.stimmax.lessons.lesson12.homeworks


fun main() {


//Задачи на приведение коллекции к значению

    val collection1 = listOf(1, 2, 3, 5, 6, 9, 88, 56, 55, 47)


//1. Проверить, что размер коллекции больше 5 элементов.
    if (collection1.size > 5) {
        println("1. Размер коллекции >5 элементов")
    } else {
        println("1. Размер коллекции <5 элементов")
    }
//2. Проверить, что коллекция пустая
    if (collection1.isEmpty()) {
        println("2. Коллекция пустая")
    } else {
        println("2. $collection1")
    }
//3. Проверить, что коллекция не пустая
    if (collection1.isNotEmpty()) {
        println("3. $collection1")
    } else {
        println("3. Коллекция пустая")
    }
//4. Взять элемент по индексу или создать значение если индекса не существует
    val getOrElse = collection1.getOrElse(5) { 5 }
    println("4. $getOrElse")

//5. Собрать коллекцию в строку
    val string = collection1.joinToString("...")
    println("5. Собранная коллекция в строку $string")

//6. Посчитать сумму всех значений
    val sum = collection1.sum()
    println("6. Сумма всех значений $sum")

//7. Посчитать среднее
    val average = collection1.average()
    println("7. Среднее значение элементов $average")

//8. Взять максимальное число
    val max = collection1.maxOrNull()
    println("8. Максимальное число $max")

//9. Взять минимальное число
    val min = collection1.minOrNull()
    println("9. Минимальное число $min")

//10. Взять первое число или null
    val firstOrNull = collection1.firstOrNull { it > 0 }
    println("10. Первое число больше нуля $firstOrNull")

//11. Проверить что коллекция содержит элемент
    if (collection1.contains(88)) {
        println("11. Коллекция содержит элемент")
    } else {
        println("11. Коллекция не содержит элемент")
    }


//Задачи на обработку коллекций

    val collectionString = listOf("Якудза", "Реактор", null, "Винни Пух", null)
    val collectionString2 = listOf(
        "Попугай",
        "Вася Пупкин",
        "Килиманджаро",
        "Теория относительности",
        "Эскапизм",
        "Кризис среднего возраста",
        "Кризис среднего возраста"
    )

//12. Отфильтровать коллекцию по диапазону 18-30
    val filter = collection1.filter { it in 18..30 }
    println("12. Отфильтрованная коллекция по диапазону от 18 до 30: $filter")

//13. Выбрать числа, которые не делятся на 2 и 3 одновременно
    val filterNot = collection1.filterNot { it % 2 == 0 && it % 3 == 0 }
    println("13. Выбрать числа, которые не делятся на 2 и 3 одновременно $filterNot")

//14. Очистить текстовую коллекцию от null элементов
    val cleanNull = collectionString.filterNotNull()
    println("14. Очищенная коллекция от null элементов $cleanNull")

//15. Преобразовать текстовую коллекцию в коллекцию длин слов
    val newColl = collectionString2.forEach { it.length }
    println("15. Function… $newColl")

//16. Преобразовать текстовую коллекцию в мапу, где ключи - перевёрнутые слова, а значения - длина слов
    val makeNew = collectionString2.associate { it.reversed() to it.length }
    println("16. Преобразовать текстовую коллекцию в мапу, где ключи - перевёрнутые слова, а значения - длина слов $makeNew")

//17. Отсортировать список в алфавитном порядке
    val sortAlpabet = collectionString.filterNotNull()
        .sorted()   // в списке есть null, а метод .sorted() не может сравнивать значения null со строками — Kotlin не знает, куда их поставить по алфавиту.
    println("17. Отсортированный список в алфавитном порядке $sortAlpabet")

//18. Взять первые 3 элемента списка
    val take = collectionString2.take(3)
    println("18. Взять первые 3 элемента списка: $take")

//19. Распечатать квадраты элементов списка
    val map = collection1.map { it * it }
    println("19. Распечатать квадраты элементов списка: $map")

//20. Группировать список по первой букве слов
    val group = collectionString2.groupBy { it.first() }
    println("20. Группировать список по первой букве слов $group")

//21. Очистить список от дублей
    val distinct = collectionString2.distinct()
    println("21. Очищенный список от дублей: $distinct")

//22. Отсортировать список по убыванию
    val sortBack = collectionString2.sortedDescending()
    println("22. Отсортировать список по убыванию: $sortBack")

//23. Взять последние 3 элемента списка
    val takeLast = collectionString2.takeLast(3)
    println("23. Взять последние 3 элемента списка: $takeLast")


    println("24. ${ex24(listOf(3, 4, 5, 6, 6, 6, 6, 6))}")
    println("25. ${ex25(listOf(85, 58, 90, 74, 88, 67, 95, 92, 50, 42, 12))}")
    println("26. ${ex26(
            listOf(
                "Стол",
                "табурет",
                "ваза",
                "Кружка",
                "Зеркало",
                "ковер",
                "Шкаф",
                "часы",
                "Люстра",
                "подушка",
                "Картина",
                "столик",
                "Вазон",
                "шторы",
                "Пуф",
                "книга",
                "Фоторамка",
                "светильник",
                "Коврик",
                "вешалка",
                "Подставка",
                "телевизор",
                "Комод",
                "полка",
                "Абажур",
                "диван",
                "Кресло",
                "занавеска",
                "Бра",
                "пепельница",
                "Глобус",
                "статуэтка",
                "Поднос",
                "фигурка",
                "Ключница",
                "плед",
                "Тумба",
                "игрушка",
                "Настенные часы",
                "подсвечник",
                "Журнальный столик",
                "сувенир",
                "Корзина для белья",
                "посуда",
                "Настольная лампа",
                "торшер",
                "Этажерка"
            )
        )}"
    )


    println(ex27(
            listOf(
                "Стол",
                "табурет",
                "ваза",
                "Кружка",
                "Зеркало",
                "ковер",
                "Шкаф",
                "часы",
                "Люстра",
                "подушка",
                "Картина",
                "столик",
                "Вазон",
                "шторы",
                "Пуф",
                "книга",
                "Фоторамка",
                "светильник",
                "Коврик",
                "вешалка",
                "Подставка",
                "телевизор",
                "Комод",
                "полка",
                "Абажур",
                "диван",
                "Кресло",
                "занавеска",
                "Бра",
                "пепельница",
                "Глобус",
                "статуэтка",
                "Поднос",
                "фигурка",
                "Ключница",
                "плед",
                "Тумба",
                "игрушка",
                "Настенные часы",
                "подсвечник",
                "Журнальный столик",
                "сувенир",
                "Корзина для белья",
                "посуда",
                "Настольная лампа",
                "торшер",
                "Этажерка"
            )
    ))
    println("28. ${ex28(listOf(1, 3, 5, 7, 3, 1, 8, 9, 9, 7))}")
    println("29. ${ex29(listOf(22, 18, 30, 45, 17, null, 60), 18)}")
}


//Реши задачи ниже в отдельных функциях.

//Задача 24. Характеристика числовой коллекции
//Напиши функцию, которая принимает коллекцию чисел и возвращает строку с характеристикой коллекции используя конструкцию when
//+ Если коллекция пустая - “Пусто”
//+ Если количество элементов меньше пяти - “Короткая”
//+ Если коллекция начинается с 0 - “Стартовая”
//+ Если сумма всех чисел больше 10000 - “Массивная”
//+ Если среднее значение равно 10 - “Сбалансированная”
//+ Если длина строки образованная склеиванием коллекции в строку равна 20 - “Клейкая”
//+ Если максимальное число меньше -10 - “Отрицательная”
//+ Если минимальное число больше 1000 - “Положительная”
//+ Если содержит одновременно числа 3 и 14 - “Пи***тая”
//+ Иначе - “Уникальная”
//Вызвать метод с данными, подходящими под каждую из веток - что это значит?????????????????????????????

fun ex24(collection: List<Int>): String {
    return when {
        collection.isEmpty() -> "Пусто"
        collection.size < 5 -> "Короткая"
        collection.first() == 0 -> "Стартовая"
        collection.sum() > 1000 -> "Массивная"
        collection.average() == 10.0 -> "Сбалансированная"
        collection.joinToString().length == 20 -> "Клейкая"
        collection.max() < (-10) -> "Отрицательная"
        collection.min() > 1000 -> "Положительная"
        collection.containsAll(listOf(3, 4)) -> "Пи***тая"
        else -> "Уникальная"
    }
}


//Задача 25. Анализ учебных оценок

//Напиши функцию, которая принимает список чисел и возвращает список чисел.
//Пример данных: val grades = listOf(85, 58, 90, 74, 88, 67, 95, 92, 50, 42, 12)
//Цель: Отфильтровать удовлетворительные оценки (>=60), отсортировать оставшиеся по возрастанию и взять первые 3.
// Вызывай методы обработки и фильтрации последовательно один из другого, чтобы результат предыдущего метода являлся основой для следующего.

fun ex25(arg: List<Int>): List<Int> {
    val newList = arg
        .filter { it > 60 }
        .sorted()
        .take(3)
    return newList

}


//Задача 26. Создание каталога по первой букве

//Напиши функцию, которая принимает список строк и возвращает словарь с ключом - буквой и значением - строкой.
//Начальные значения: val list = listOf(
//    "Стол", "табурет", "ваза", "Кружка", "Зеркало", "ковер", "Шкаф", "часы", "Люстра",
//    "подушка", "Картина", "столик", "Вазон", "шторы", "Пуф", "книга", "Фоторамка", "светильник",
//    "Коврик", "вешалка", "Подставка", "телевизор", "Комод", "полка", "Абажур", "диван", "Кресло",
//    "занавеска", "Бра", "пепельница", "Глобус", "статуэтка", "Поднос", "фигурка", "Ключница", "плед",
//    "Тумба", "игрушка", "Настенные часы", "подсвечник", "Журнальный столик", "сувенир", "Корзина для белья",
//    "посуда", "Настольная лампа", "торшер", "Этажерка")
//Цель: Привести все слова в списке к нижнему регистру, сгруппировать в каталог по первой букве используя метод groupBy

fun ex26(arg: List<String>): MutableMap<Char, List<String>> {
    return arg.map { it.lowercase() }        // приводим к нижнему регистру
        .groupBy { it.first() }        // берём первую букву
        .toMutableMap()                // если нужен MutableMap
}


//Задание 27. Подсчёт средней длины слов в списке

//Напиши функцию, которая принимает список строк и возвращает строку.
//Начальные значения взять из предыдущей задачи.
//Цель: Перевести все слова в количество букв, подсчитать среднее значение. Вернуть форматированный
// текст с двумя знаками после запятой, используя функцию format и подходящий шаблон.

fun ex27(arg: List<String>): String {
    val letters = arg.map { it.length }.average()
    return "27. Средняя длина слов: %.2f".format(letters)
}


//Задание 28: Категоризация чисел

//Напиши функцию, которая принимает список чисел и возвращает словарь с ключами - строками и значениями - числами.
//Начальные значения: val numbers = listOf(1, 3, 5, 7, 3, 1, 8, 9, 9, 7)
//Цель: Отобрать уникальные числа, отсортировать по убыванию и сгруппировать по четности (“четные” и “нечетные”).
fun ex28(arg: List<Int>): MutableMap<String, List<Int>> {
    return arg.distinct()
        .sortedDescending()
        .groupBy { if (it % 2 == 0) "Четные" else "Нечетные" }
        .toMutableMap()
}


//Задание 29: Поиск первого подходящего элемента

//Напиши функцию, которая принимает список чисел и число и возвращает nullable число.
//Начальные значения: val ages = listOf(22, 18, 30, 45, 17, null, 60) и число для проверки возраста, например 18.
//Цель: Найти первый возраст в списке, который соответствует условию (больше второго аргумента) и вернуть его, либо null если значения не нашлось.

fun ex29(arg: List<Int?>, checkAge: Int): Int? {
return arg.firstOrNull{it!=null && it > checkAge}
}
